<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<!-- Scan class path to check for the spring base annotations -->
	<context:component-scan base-package="com.velvet.*" />
	<context:annotation-config />
	<!-- Load properties file into the system -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- Load datasource to access the database -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>


	<!-- Initialize transaction manager and notify spring that transaction will 
		be annotation driven -->
	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />
	
	<!-- Set aspectj proxy to true to mark that aspect annotation will be in 
		class level not in interface level -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
<!--  	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.velvet.vo.Parts</value>
				<value>com.velvet.vo.ItemPartMappingBean</value>
				<value>com.velvet.vo.OrderBean</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>	
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>				
			</props>
		</property>
	</bean>

	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- Initialize JDBC Template -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		scope="prototype">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<bean id="AccessUrlPropertyConfigurer" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
		  <property name="location">  
		      <value>/WEB-INF/menuUrlMapping.properties</value>  
		  </property>  
	</bean>  

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/jsps/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

</beans>
